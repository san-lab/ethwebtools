{{define "selectact"}}
<style>
    body {
            font-family: Arial, sans-serif;
        }

        /* Modal styles */
        .selectact {
            display: none;
            position: fixed;
            top: 80%;
            left: 30%;
            transform: translate(-50%, -50%);
            padding: 20px;
            background-color: #fff;
            border: 1px solid #ccc;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            z-index: 1000;
        }

        /* Button styles */
        .btn {
            margin-right: 10px;
            padding: 8px 16px;
            cursor: pointer;
        }

        /* Close button style */
        .close {
            position: absolute;
            top: 10px;
            right: 10px;
            cursor: pointer;
        }
    </style>


<!-- Modal -->
<div id="nodeModal" class="selectact">
    <!-- Close button -->
    <span class="close" onclick="hideModal()">&times;</span>

    <!-- Modal content -->
    <div>
        <h3 id="selActHeader">Node</h3>
        <!-- Your form or content here -->
        <table>
    <tr>
     <td>User:</td><td><input type="text" id="sUserId" name="newUserId"></td>
    </tr>
    <tr>
      <td>Balance:</td><td><input type="text" id="sBalance"></td>
    </tr>
<tr>
      <td >Claimed hash:</td><td id="clHash"></td>
    </tr>
    <tr>
      <td>Calculated hash:</td><td id="caHash"></td>
    </tr>

    </table>

        <!-- Three buttons -->
        <table>
        <tr>
        <td>
        <button class="btn" onclick="update2()">Save</button>
         </td>
          <td>
        <form method="POST">
        <button class="btn" onclick="submitAction()">Get Proof</button>
        <input type="hidden" name="action" value="Proof"/>
        <input type="hidden" name="leafid" id="leafid"/>
         <input type="hidden" name="strategy" value="{{.BodyData.Strategy}}"/>
         </form>  
         </td>
           <td>
        <button class="btn" onclick="hideModal()">Close</button>
          </td>
        </tr>
        </table>
    </div>
</div>

<script>
var selNodeId;
    function showSelAct(nodeId) {
        selNodeId = nodeId;
        const node = nodes.get(nodeId);
        const modal = document.getElementById('nodeModal');
        const header = document.getElementById('selActHeader');
        header.textContent = `Node ${nodeId}`; 
        const bal = document.getElementById('sBalance');
        bal.value = node.balance;
        const uid =  document.getElementById('sUserId');
       uid.value = node.userId;
       const clhash = document.getElementById('clHash');
       clHash.innerHTML = `${node.hash}`;
        const cahash = document.getElementById('caHash');
       caHash.innerHTML = `${node.calcHash}`;
       if (node.hash!==node.calcHash) {
            caHash.style.color = 'red';
       } else {
            caHash.style.color = 'green';
       }
       const leafid = document.getElementById("leafid");
       leafid.value = node.userId;
       
       
        modal.style.display = 'block';
    }

    function hideModal() {
        const modal = document.getElementById('nodeModal');
        modal.style.display = 'none';
    }

    function editFields() {
        // Implement your logic for editing fields here
        console.log('Editing fields...');
    }

    function submitAction() {
                 
        // Close the modal after handling the action
        hideModal();
    }


    function update2() {
        hideModal();
      const nodeId = network.getSelectedNodes()[0];
      const newUserId = document.getElementById('sUserId').value;
      const newBalance = document.getElementById('sBalance').value;
      let nlabel = "";
      if (newUserId !== null && newUserId.length > 0) {
          
        nlabel += newUserId+`: `;
      }
      nlabel += `<b>$`+newBalance+`</b>\n`;
      nlabel += shortenHash( nodes.get(nodeId).hash);


      
      if (nodeId !== undefined) {
        const label = newUserId
         nodes.update({ id: nodeId, label: nlabel , balance: newBalance, userId: newUserId});
         calculateHash(nodeId);
        
      }
    }


</script>


{{end}}