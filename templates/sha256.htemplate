{{define "sha256"}}
<script type="text/javascript">

function concatenateArrays(array1, array2) {
  const result = new Uint8Array(array1.length + array2.length);
  result.set(array1, 0);
  result.set(array2, array1.length);
  return result;
}



const encoder = new TextEncoder(); 

function encode(message) {
  return encoder.encode(message);
}

async function sha256(data) {
  // Data should be an ArrayBuffer

  // Calculate the SHA-256 hash
  const hashBuffer = await crypto.subtle.digest('SHA-256', data);

  // Convert the hash to a hexadecimal string
  const hashArray = Array.from(new Uint8Array(hashBuffer));
  const hashHex = hashArray.map(byte => byte.toString(16).padStart(2, '0')).join('');

  return hashHex;
}



// Convert a hex string to a byte array
function hexToBytes(hex) {
    let bytes = [];
    for (let c = 0; c < hex.length; c += 2)
        bytes.push(parseInt(hex.substr(c, 2), 16));
    return bytes;
}

// Convert a byte array to a hex string
function bytesToHex(bytes) {
    let hex = [];
    for (let i = 0; i < bytes.length; i++) {
        let current = bytes[i] < 0 ? bytes[i] + 256 : bytes[i];
        hex.push((current >>> 4).toString(16));
        hex.push((current & 0xF).toString(16));
    }
    return hex.join("");
}

function shortenHash(inputString) {
    if (inputString==null || inputString.length <= 10) {
        return inputString; // If the string is 10 characters or less, no need to shorten
    }

    const firstFiveChars = inputString.slice(0, 5);
    const lastFiveChars = inputString.slice(-5);

    return `${firstFiveChars}...${lastFiveChars}`;
}


  </script>




  {{end}}